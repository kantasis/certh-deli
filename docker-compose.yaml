networks:
   main_network:
      name: ${PROJECT_NAME}_main_network

services:

   # ubuntu_label:
   #    image: ${PROJECT_NAME}_ubuntu_image
   #    container_name: ${PROJECT_NAME}_ubuntu_container
   #    build: ./services/ubuntu
   #    env_file:
   #       - .private/ubuntu.env
   #    # ports:
   #    #    - 8000:8000
   #    #    - 5173:5173
   #    volumes:
   #       - ./app-react:/app-react
   #    networks:
   #       - main_network
   #    # environment:
   #    #    - GK_PWD=${PWD}
   #    #    - NODE_PORT=${NODE_PORT}

   # python_label:
   #    image: ${PROJECT_NAME}_python_image
   #    container_name: ${PROJECT_NAME}_python_container
   #    build: ./services/python
   #    env_file:
   #       - ./services/python/.env
   #    volumes:
   #       - ./shared:/shared
   #    networks:
   #       - main_network

   grafana_label:
      image: ${PROJECT_NAME}_grafana_image
      container_name: ${PROJECT_NAME}_grafana_container
      env_file:
         - ./services/grafana/.env
      build:
         context: ./services/grafana
      # TODO: Check how to change the grafana server port
      ports:
         - ${HOST_GRAFANA_PORT}:3000
      restart: always
      volumes:
         - ./shared/grafana/main:/var/lib/grafana
         - ./app-grafana:${GLOBAL_GF_PATHS_PROVISIONING}
      networks:
         - main_network
      depends_on:
         - db_label

   db_label:
      image: ${PROJECT_NAME}_db_image
      container_name: ${PROJECT_NAME}_db_container
      build:
         context: ./services/postgres
      env_file:
         - ./services/postgres/.env
      restart: always
      volumes:
         - ./shared/data:${GLOBAL_PGDATA}
      networks:
         - main_network

   node_label:
      image: ${PROJECT_NAME}_node_image
      container_name: ${PROJECT_NAME}_node_container
      build:
         context: ./services/node
      env_file:
         - ./services/node/.env
      ports:
         - ${HOST_NODE_PORT}:${NODE_PORT}
      restart: always
      volumes: 
         - ./app-react:/app-react
      networks:
         - main_network

   spring_label:
      image: ${PROJECT_NAME}_spring_image
      container_name: ${PROJECT_NAME}_spring_container
      build:
         context: ./services/spring
      env_file:
         - ./services/spring/.env
      ports:
         - ${HOST_SPRING_PORT}:${SPRING_PORT}
      restart: always
      volumes: 
         - ./shared/tomcat-logs:/tomcat/logs
         - ./shared/spring-logs:/spring/logs
         - ./app-spring:/app-spring
      networks:
         - main_network
      depends_on:
         - db_label

